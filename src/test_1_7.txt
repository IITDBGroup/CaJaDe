gprom -loglevel 0 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -query "provenance of (select count(*) as win, s.season_name from team t, game g, season s where t.team_id = g.winner_id and g.season_id = s.season_id and t.team= 'GSW' group by s.season_name);"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT * FROM pt_full;"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user 
 FROM PT AS A_1;
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.season_name AS a_15, A_2.season_id AS a_16, A_2.season_type AS a_17 
 FROM PT AS A_1, season AS A_2 
 WHERE (A_2.season_id)=(A_1."prov_game_season__id"); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.team_id AS a_15, A_2.team AS a_16 
 FROM PT AS A_1, team AS A_2 
 WHERE (A_2.team_id)=(A_1."prov_game_winner__id"); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.team_id AS a_15, A_2.team AS a_16 
 FROM PT AS A_1, team AS A_2 
 WHERE (A_2.team_id)=(A_1."prov_game_home__id"); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.team_id AS a_15, A_2.team AS a_16 
 FROM PT AS A_1, team AS A_2 
 WHERE (A_2.team_id)=(A_1."prov_game_away__id"); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.assists AS a_15, A_2.team_id AS a_16, A_2.home_id AS a_17, A_2.game_date AS a_18, A_2.arc_three_assists AS a_19, A_2.corner_three_assists AS a_20, A_2.shortmidrangeassists AS a_21, A_2.longmidrangeassists AS a_22, A_2.atrimassists AS a_23, A_2.three_ptassists AS a_24, A_2.two_ptassists AS a_25, A_2.assistpoints AS a_26 
 FROM PT AS A_1, team_game_assist AS A_2 
 WHERE (A_1."prov_team_team__id")=(A_2.team_id) AND (A_1."prov_game_game__date")=(A_2.game_date) AND (A_1."prov_game_home__id")=(A_2.home_id); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.home_id AS a_15, A_2.defshortmidrangereboundpct AS a_16, A_2.defatrimreboundpct AS a_17, A_2.offfgreboundpct AS a_18, A_2.off_three_ptreboundpct AS a_19, A_2.off_three_ptrebounds AS a_20, A_2.off_two_ptreboundpct AS a_21, A_2.off_two_ptrebounds AS a_22, A_2.offftreboundpct AS a_23, A_2.ftoffrebounds AS a_24, A_2.team_id AS a_25, A_2.game_date AS a_26, A_2.rebounds AS a_27, A_2.defrebounds AS a_28, A_2.ftdefrebounds AS a_29, A_2.defftreboundpct AS a_30, A_2.def_two_ptrebounds AS a_31, A_2.def_two_ptreboundpct AS a_32, A_2.def_three_ptrebounds AS a_33, A_2.def_three_ptreboundpct AS a_34, A_2.deffgreboundpct AS a_35, A_2.offrebounds AS a_36, A_2.offcorner_three_reboundpct AS a_37, A_2.offarc_three_reboundpct AS a_38, A_2.offlongmidrangereboundpct AS a_39, A_2.offshortmidrangereboundpct AS a_40, A_2.offatrimreboundpct AS a_41, A_2.defcorner_three_reboundpct AS a_42, A_2.defarc_three_reboundpct AS a_43, A_2.deflongmidrangereboundpct AS a_44 
 FROM PT AS A_1, team_game_rebound AS A_2 
 WHERE (A_1."prov_team_team__id")=(A_2.team_id) AND (A_1."prov_game_game__date")=(A_2.game_date) AND (A_1."prov_game_home__id")=(A_2.home_id); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.fg_two_a AS a_15, A_2.fg_two_m AS a_16, A_2.points AS a_17, A_2.offposs AS a_18, A_2.game_date AS a_19, A_2.fg_three_apctblocked AS a_20, A_2.fg_three_ablocked AS a_21, A_2.fg_two_apctblocked AS a_22, A_2.fg_two_ablocked AS a_23, A_2.home_id AS a_24, A_2.team_id AS a_25, A_2.assisted_two_spct AS a_26, A_2.ptsunassisted_three_s AS a_27, A_2.nonputbacksassisted_two_spct AS a_28, A_2.assisted_three_spct AS a_29, A_2.fg_three_apct AS a_30, A_2.shotqualityavg AS a_31, A_2.efgpct AS a_32, A_2.tspct AS a_33, A_2.ptsputbacks AS a_34, A_2.ptsassisted_three_s AS a_35, A_2.ptsunassisted_two_s AS a_36, A_2.ptsassisted_two_s AS a_37, A_2.ftpoints AS a_38, A_2.nonheavefg_three_pct AS a_39, A_2.fg_three_pct AS a_40, A_2.fg_three_a AS a_41, A_2.fg_three_m AS a_42, A_2.fg_two_pct AS a_43 
 FROM PT AS A_1, team_game_scoring AS A_2 
 WHERE (A_1."prov_team_team__id")=(A_2.team_id) AND (A_1."prov_game_game__date")=(A_2.game_date) AND (A_1."prov_game_home__id")=(A_2.home_id); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.defrebounds AS a_15, A_2.season_id AS a_16, A_2.team_id AS a_17, A_2.fg_m AS a_18, A_2.fg_a AS a_19, A_2.fg_pct AS a_20, A_2.fg_three_m AS a_21, A_2.fg_three_a AS a_22, A_2.fg_three_pct AS a_23, A_2.fg_two_m AS a_24, A_2.fg_two_a AS a_25, A_2.fg_two_pct AS a_26, A_2.ft_m AS a_27, A_2.ft_a AS a_28, A_2.ft_pct AS a_29, A_2.offrebounds AS a_30, A_2.totalrebounds AS a_31, A_2.assists AS a_32, A_2.stl AS a_33, A_2.blk AS a_34, A_2.tov AS a_35, A_2.pf AS a_36, A_2.pts AS a_37 
 FROM PT AS A_1, team_oppo_season_average AS A_2 
 WHERE (A_1."prov_team_team__id")=(A_2.team_id) AND (A_1."prov_season_season__id")=(A_2.season_id); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.pts AS a_15, A_2.pf AS a_16, A_2.tov AS a_17, A_2.blk AS a_18, A_2.stl AS a_19, A_2.assists AS a_20, A_2.totalrebounds AS a_21, A_2.defrebounds AS a_22, A_2.offrebounds AS a_23, A_2.ft_pct AS a_24, A_2.ft_a AS a_25, A_2.ft_m AS a_26, A_2.fg_two_pct AS a_27, A_2.fg_two_a AS a_28, A_2.fg_two_m AS a_29, A_2.fg_three_pct AS a_30, A_2.fg_three_a AS a_31, A_2.fg_three_m AS a_32, A_2.fg_pct AS a_33, A_2.fg_a AS a_34, A_2.fg_m AS a_35, A_2.weight AS a_36, A_2.height AS a_37, A_2.age AS a_38, A_2.team_id AS a_39, A_2.season_id AS a_40 
 FROM PT AS A_1, team_season_average AS A_2 
 WHERE (A_1."prov_team_team__id")=(A_2.team_id) AND (A_1."prov_season_season__id")=(A_2.season_id); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.season_name AS a_15, A_2.season_id AS a_16, A_2.season_type AS a_17, A_3.team_id AS a_18, A_3.team AS a_19 
 FROM PT AS A_1, season AS A_2, team AS A_3 
 WHERE (A_2.season_id)=(A_1."prov_game_season__id") AND (A_3.team_id)=(A_1."prov_game_winner__id"); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.season_name AS a_15, A_2.season_id AS a_16, A_2.season_type AS a_17, A_3.team_id AS a_18, A_3.team AS a_19 
 FROM PT AS A_1, season AS A_2, team AS A_3 
 WHERE (A_2.season_id)=(A_1."prov_game_season__id") AND (A_3.team_id)=(A_1."prov_game_home__id"); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.season_name AS a_15, A_2.season_id AS a_16, A_2.season_type AS a_17, A_3.team_id AS a_18, A_3.team AS a_19 
 FROM PT AS A_1, season AS A_2, team AS A_3 
 WHERE (A_2.season_id)=(A_1."prov_game_season__id") AND (A_3.team_id)=(A_1."prov_game_away__id"); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.longmidrangeassists AS a_15, A_2.game_date AS a_16, A_2.home_id AS a_17, A_2.assists AS a_18, A_2.assistpoints AS a_19, A_2.two_ptassists AS a_20, A_2.three_ptassists AS a_21, A_2.atrimassists AS a_22, A_2.shortmidrangeassists AS a_23, A_2.corner_three_assists AS a_24, A_2.arc_three_assists AS a_25, A_2.player_id AS a_26, A_3.player_id AS a_27, A_3.player_name AS a_28 
 FROM PT AS A_1, player_game_assist AS A_2, player AS A_3 
 WHERE (A_1."prov_game_game__date")=(A_2.game_date) AND (A_1."prov_game_home__id")=(A_2.home_id) AND (A_3.player_id)=(A_2.player_id); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.def_two_ptrebounds AS a_15, A_2.def_two_ptreboundpct AS a_16, A_2.def_three_ptrebounds AS a_17, A_2.def_three_ptreboundpct AS a_18, A_2.deffgreboundpct AS a_19, A_2.offrebounds AS a_20, A_2.ftoffrebounds AS a_21, A_2.offftreboundpct AS a_22, A_2.off_two_ptrebounds AS a_23, A_2.off_two_ptreboundpct AS a_24, A_2.off_three_ptrebounds AS a_25, A_2.off_three_ptreboundpct AS a_26, A_2.offfgreboundpct AS a_27, A_2.defatrimreboundpct AS a_28, A_2.defshortmidrangereboundpct AS a_29, A_2.deflongmidrangereboundpct AS a_30, A_2.defarc_three_reboundpct AS a_31, A_2.defcorner_three_reboundpct AS a_32, A_2.offatrimreboundpct AS a_33, A_2.offshortmidrangereboundpct AS a_34, A_2.offlongmidrangereboundpct AS a_35, A_2.offarc_three_reboundpct AS a_36, A_2.offcorner_three_reboundpct AS a_37, A_2.player_id AS a_38, A_2.defftreboundpct AS a_39, A_2.ftdefrebounds AS a_40, A_2.defrebounds AS a_41, A_2.rebounds AS a_42, A_2.home_id AS a_43, A_2.game_date AS a_44, A_3.player_id AS a_45, A_3.player_name AS a_46 
 FROM PT AS A_1, player_game_rebound AS A_2, player AS A_3 
 WHERE (A_1."prov_game_game__date")=(A_2.game_date) AND (A_1."prov_game_home__id")=(A_2.home_id) AND (A_3.player_id)=(A_2.player_id); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.nonputbacksassisted_two_spct AS a_15, A_2.game_date AS a_16, A_2.home_id AS a_17, A_2.minutes AS a_18, A_2.offposs AS a_19, A_2.points AS a_20, A_2.fg_two_m AS a_21, A_2.fg_two_a AS a_22, A_2.fg_two_pct AS a_23, A_2.fg_three_m AS a_24, A_2.fg_three_a AS a_25, A_2.fg_three_pct AS a_26, A_2.nonheavefg_three_pct AS a_27, A_2.ftpoints AS a_28, A_2.ptsassisted_two_s AS a_29, A_2.ptsunassisted_two_s AS a_30, A_2.ptsassisted_three_s AS a_31, A_2.ptsunassisted_three_s AS a_32, A_2.assisted_two_spct AS a_33, A_2.assisted_three_spct AS a_34, A_2.fg_three_apct AS a_35, A_2.shotqualityavg AS a_36, A_2.efgpct AS a_37, A_2.tspct AS a_38, A_2.ptsputbacks AS a_39, A_2.fg_two_ablocked AS a_40, A_2.fg_two_apctblocked AS a_41, A_2.fg_three_ablocked AS a_42, A_2.fg_three_apctblocked AS a_43, A_2.usage AS a_44, A_2.player_id AS a_45, A_3.player_id AS a_46, A_3.player_name AS a_47 
 FROM PT AS A_1, player_game_scoring AS A_2, player AS A_3 
 WHERE (A_1."prov_game_game__date")=(A_2.game_date) AND (A_1."prov_game_home__id")=(A_2.home_id) AND (A_3.player_id)=(A_2.player_id); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.team_id AS a_15, A_2.team AS a_16 
 FROM PT AS A_1, team AS A_2 
 WHERE (A_2.team_id)=(A_1."prov_game_winner__id") AND (A_2.team_id)=(A_1."prov_game_home__id"); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.team_id AS a_15, A_2.team AS a_16 
 FROM PT AS A_1, team AS A_2 
 WHERE (A_2.team_id)=(A_1."prov_game_winner__id") AND (A_2.team_id)=(A_1."prov_game_away__id"); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.team_id AS a_15, A_2.team AS a_16 
 FROM PT AS A_1, team AS A_2 
 WHERE (A_2.team_id)=(A_1."prov_game_home__id") AND (A_2.team_id)=(A_1."prov_game_away__id"); 
"
we are here!
gprom -loglevel 1 -backend postgres -user lchenjie -passwd lcj53242 -host localhost -port 5432 -db nba -Pexecutor sql -Oselection_move_around TRUE -Oremove_unnecessary_columns FALSE -Opush_selections FALSE -Omerge_ops FALSE  -Ofactor_attrs FALSE -Omaterialize_unsafe_proj FALSE -Oremove_redundant_projections FALSE  -Oremove_redundant_duplicate_removals FALSE -Oremove_redundant_window_operators FALSE -Opullup_duplicate_removals FALSE  -Opullup_prov_projections FALSE -Opush_selections_through_joins FALSE -heuristic_opt TRUE  -query "SELECT A_1."win" AS win, A_1."season_name" AS season_name, A_1."prov_team_team__id" AS a_1, A_1."prov_team_team" AS a_2, A_1."prov_game_game__date" AS a_3, A_1."prov_game_home__points" AS a_4, A_1."prov_game_away__points" AS a_5, A_1."prov_game_home__possessions" AS a_6, A_1."prov_game_away__possessions" AS a_7, A_1."prov_game_home__id" AS a_8, A_1."prov_game_away__id" AS a_9, A_1."prov_game_winner__id" AS a_10, A_1."prov_game_season__id" AS a_11, A_1."prov_season_season__id" AS a_12, A_1."prov_season_season__name" AS a_13, A_1."prov_season_season__type" AS a_14, A_1."pnumber" AS pnumber, A_1."is_user" AS is_user, A_2.player_id AS a_15, A_2.salary AS a_16, A_2.season_id AS a_17, A_3.player_id AS a_18, A_3.player_name AS a_19 
 FROM PT AS A_1, player_salary AS A_2, player AS A_3 
 WHERE (A_1."prov_season_season__id")=(A_2.season_id) AND (A_3.player_id)=(A_2.player_id); 
"
we are here!
